{"backend_state":"running","connection_file":"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/.local/share/jupyter/runtime/kernel-85db1485-be9c-41dd-9344-6bdc35c6db06.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1657205097815,"exec_count":40,"id":"519834","input":"import plotly.express as px\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt \nimport seaborn as sns","kernel":"ds_env","pos":0,"start":1657205097811,"state":"done","type":"cell"}
{"cell_type":"code","end":1657205098173,"exec_count":41,"id":"2180fa","input":"heart = pd.read_csv(\"Data/heart.csv\")","kernel":"ds_env","pos":1,"start":1657205098161,"state":"done","type":"cell"}
{"cell_type":"code","end":1657205098470,"exec_count":42,"id":"3cf468","input":"row_to_drop = [449]\nheart.drop(row_to_drop, axis= 0, inplace= True)","kernel":"ds_env","pos":2,"start":1657205098466,"state":"done","type":"cell"}
{"cell_type":"code","end":1657205098593,"exec_count":43,"id":"65d92b","input":"heart.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>ChestPainType</th>\n      <th>RestingBP</th>\n      <th>Cholesterol</th>\n      <th>FastingBS</th>\n      <th>RestingECG</th>\n      <th>MaxHR</th>\n      <th>ExerciseAngina</th>\n      <th>Oldpeak</th>\n      <th>ST_Slope</th>\n      <th>HeartDisease</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>40</td>\n      <td>M</td>\n      <td>ATA</td>\n      <td>140</td>\n      <td>289</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>172</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Up</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>49</td>\n      <td>F</td>\n      <td>NAP</td>\n      <td>160</td>\n      <td>180</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>156</td>\n      <td>N</td>\n      <td>1.0</td>\n      <td>Flat</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>37</td>\n      <td>M</td>\n      <td>ATA</td>\n      <td>130</td>\n      <td>283</td>\n      <td>0</td>\n      <td>ST</td>\n      <td>98</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Up</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>48</td>\n      <td>F</td>\n      <td>ASY</td>\n      <td>138</td>\n      <td>214</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>108</td>\n      <td>Y</td>\n      <td>1.5</td>\n      <td>Flat</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>54</td>\n      <td>M</td>\n      <td>NAP</td>\n      <td>150</td>\n      <td>195</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>122</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Up</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  MaxHR  \\\n0   40   M           ATA        140          289          0     Normal    172   \n1   49   F           NAP        160          180          0     Normal    156   \n2   37   M           ATA        130          283          0         ST     98   \n3   48   F           ASY        138          214          0     Normal    108   \n4   54   M           NAP        150          195          0     Normal    122   \n\n  ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n0              N      0.0       Up             0  \n1              N      1.0     Flat             1  \n2              N      0.0       Up             0  \n3              Y      1.5     Flat             1  \n4              N      0.0       Up             0  "},"exec_count":43}},"pos":3,"scrolled":true,"start":1657205098569,"state":"done","type":"cell"}
{"cell_type":"code","end":1657205098714,"exec_count":44,"id":"2058f6","input":"pd.concat([heart, pd.get_dummies(heart['RestingECG'])], axis = 1)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>ChestPainType</th>\n      <th>RestingBP</th>\n      <th>Cholesterol</th>\n      <th>FastingBS</th>\n      <th>RestingECG</th>\n      <th>MaxHR</th>\n      <th>ExerciseAngina</th>\n      <th>Oldpeak</th>\n      <th>ST_Slope</th>\n      <th>HeartDisease</th>\n      <th>LVH</th>\n      <th>Normal</th>\n      <th>ST</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>40</td>\n      <td>M</td>\n      <td>ATA</td>\n      <td>140</td>\n      <td>289</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>172</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Up</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>49</td>\n      <td>F</td>\n      <td>NAP</td>\n      <td>160</td>\n      <td>180</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>156</td>\n      <td>N</td>\n      <td>1.0</td>\n      <td>Flat</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>37</td>\n      <td>M</td>\n      <td>ATA</td>\n      <td>130</td>\n      <td>283</td>\n      <td>0</td>\n      <td>ST</td>\n      <td>98</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Up</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>48</td>\n      <td>F</td>\n      <td>ASY</td>\n      <td>138</td>\n      <td>214</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>108</td>\n      <td>Y</td>\n      <td>1.5</td>\n      <td>Flat</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>54</td>\n      <td>M</td>\n      <td>NAP</td>\n      <td>150</td>\n      <td>195</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>122</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Up</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>913</th>\n      <td>45</td>\n      <td>M</td>\n      <td>TA</td>\n      <td>110</td>\n      <td>264</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>132</td>\n      <td>N</td>\n      <td>1.2</td>\n      <td>Flat</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>914</th>\n      <td>68</td>\n      <td>M</td>\n      <td>ASY</td>\n      <td>144</td>\n      <td>193</td>\n      <td>1</td>\n      <td>Normal</td>\n      <td>141</td>\n      <td>N</td>\n      <td>3.4</td>\n      <td>Flat</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>915</th>\n      <td>57</td>\n      <td>M</td>\n      <td>ASY</td>\n      <td>130</td>\n      <td>131</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>115</td>\n      <td>Y</td>\n      <td>1.2</td>\n      <td>Flat</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>916</th>\n      <td>57</td>\n      <td>F</td>\n      <td>ATA</td>\n      <td>130</td>\n      <td>236</td>\n      <td>0</td>\n      <td>LVH</td>\n      <td>174</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Flat</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>917</th>\n      <td>38</td>\n      <td>M</td>\n      <td>NAP</td>\n      <td>138</td>\n      <td>175</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>173</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Up</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>917 rows Ã— 15 columns</p>\n</div>","text/plain":"     Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  \\\n0     40   M           ATA        140          289          0     Normal   \n1     49   F           NAP        160          180          0     Normal   \n2     37   M           ATA        130          283          0         ST   \n3     48   F           ASY        138          214          0     Normal   \n4     54   M           NAP        150          195          0     Normal   \n..   ...  ..           ...        ...          ...        ...        ...   \n913   45   M            TA        110          264          0     Normal   \n914   68   M           ASY        144          193          1     Normal   \n915   57   M           ASY        130          131          0     Normal   \n916   57   F           ATA        130          236          0        LVH   \n917   38   M           NAP        138          175          0     Normal   \n\n     MaxHR ExerciseAngina  Oldpeak ST_Slope  HeartDisease  LVH  Normal  ST  \n0      172              N      0.0       Up             0    0       1   0  \n1      156              N      1.0     Flat             1    0       1   0  \n2       98              N      0.0       Up             0    0       0   1  \n3      108              Y      1.5     Flat             1    0       1   0  \n4      122              N      0.0       Up             0    0       1   0  \n..     ...            ...      ...      ...           ...  ...     ...  ..  \n913    132              N      1.2     Flat             1    0       1   0  \n914    141              N      3.4     Flat             1    0       1   0  \n915    115              Y      1.2     Flat             1    0       1   0  \n916    174              N      0.0     Flat             1    1       0   0  \n917    173              N      0.0       Up             0    0       1   0  \n\n[917 rows x 15 columns]"},"exec_count":44}},"pos":4,"start":1657205098677,"state":"done","type":"cell"}
{"cell_type":"code","end":1657205098967,"exec_count":45,"id":"64aa5e","input":"heart['HeartDisease'] = heart['HeartDisease'].astype('category')\nheart.info()","kernel":"ds_env","output":{"0":{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nInt64Index: 917 entries, 0 to 917\nData columns (total 12 columns):\n #   Column          Non-Null Count  Dtype   \n---  ------          --------------  -----   \n 0   Age             917 non-null    int64   \n 1   Sex             917 non-null    object  \n 2   ChestPainType   917 non-null    object  \n 3   RestingBP       917 non-null    int64   \n 4   Cholesterol     917 non-null    int64   \n 5   FastingBS       917 non-null    int64   \n 6   RestingECG      917 non-null    object  \n 7   MaxHR           917 non-null    int64   \n 8   ExerciseAngina  917 non-null    object  \n 9   Oldpeak         917 non-null    float64 \n 10  ST_Slope        917 non-null    object  \n 11  HeartDisease    917 non-null    category\ndtypes: category(1), float64(1), int64(5), object(5)\nmemory usage: 87.0+ KB\n"}},"pos":5,"scrolled":true,"start":1657205098943,"state":"done","type":"cell"}
{"cell_type":"code","end":1657205099799,"exec_count":46,"id":"73cab5","input":"heart_update = pd.get_dummies(heart, columns = ['Sex', 'ChestPainType', 'RestingECG', 'ExerciseAngina', 'ST_Slope'])","kernel":"ds_env","pos":6,"start":1657205099783,"state":"done","type":"cell"}
{"cell_type":"code","end":1657205100391,"exec_count":47,"id":"606a6b","input":"heart_update.head()","kernel":"ds_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>RestingBP</th>\n      <th>Cholesterol</th>\n      <th>FastingBS</th>\n      <th>MaxHR</th>\n      <th>Oldpeak</th>\n      <th>HeartDisease</th>\n      <th>Sex_F</th>\n      <th>Sex_M</th>\n      <th>ChestPainType_ASY</th>\n      <th>...</th>\n      <th>ChestPainType_NAP</th>\n      <th>ChestPainType_TA</th>\n      <th>RestingECG_LVH</th>\n      <th>RestingECG_Normal</th>\n      <th>RestingECG_ST</th>\n      <th>ExerciseAngina_N</th>\n      <th>ExerciseAngina_Y</th>\n      <th>ST_Slope_Down</th>\n      <th>ST_Slope_Flat</th>\n      <th>ST_Slope_Up</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>40</td>\n      <td>140</td>\n      <td>289</td>\n      <td>0</td>\n      <td>172</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>49</td>\n      <td>160</td>\n      <td>180</td>\n      <td>0</td>\n      <td>156</td>\n      <td>1.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>37</td>\n      <td>130</td>\n      <td>283</td>\n      <td>0</td>\n      <td>98</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>48</td>\n      <td>138</td>\n      <td>214</td>\n      <td>0</td>\n      <td>108</td>\n      <td>1.5</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>54</td>\n      <td>150</td>\n      <td>195</td>\n      <td>0</td>\n      <td>122</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 21 columns</p>\n</div>","text/plain":"   Age  RestingBP  Cholesterol  FastingBS  MaxHR  Oldpeak HeartDisease  Sex_F  \\\n0   40        140          289          0    172      0.0            0      0   \n1   49        160          180          0    156      1.0            1      1   \n2   37        130          283          0     98      0.0            0      0   \n3   48        138          214          0    108      1.5            1      1   \n4   54        150          195          0    122      0.0            0      0   \n\n   Sex_M  ChestPainType_ASY  ...  ChestPainType_NAP  ChestPainType_TA  \\\n0      1                  0  ...                  0                 0   \n1      0                  0  ...                  1                 0   \n2      1                  0  ...                  0                 0   \n3      0                  1  ...                  0                 0   \n4      1                  0  ...                  1                 0   \n\n   RestingECG_LVH  RestingECG_Normal  RestingECG_ST  ExerciseAngina_N  \\\n0               0                  1              0                 1   \n1               0                  1              0                 1   \n2               0                  0              1                 1   \n3               0                  1              0                 0   \n4               0                  1              0                 1   \n\n   ExerciseAngina_Y  ST_Slope_Down  ST_Slope_Flat  ST_Slope_Up  \n0                 0              0              0            1  \n1                 0              0              1            0  \n2                 0              0              0            1  \n3                 1              0              1            0  \n4                 0              0              0            1  \n\n[5 rows x 21 columns]"},"exec_count":47}},"pos":7,"start":1657205100371,"state":"done","type":"cell"}
{"cell_type":"code","end":1657205101567,"exec_count":48,"id":"bdbfbd","input":"target = heart_update['HeartDisease']","kernel":"ds_env","pos":8,"start":1657205101559,"state":"done","type":"cell"}
{"cell_type":"code","end":1657205102177,"exec_count":49,"id":"929540","input":"input_columns = heart_update.loc[:, heart_update.columns != 'HeartDisease']","kernel":"ds_env","pos":9,"start":1657205102164,"state":"done","type":"cell"}
{"cell_type":"code","end":1657205102977,"exec_count":50,"id":"593f69","input":"import sklearn\nfrom sklearn.model_selection import train_test_split\n\nx_train, x_test, y_train, y_test = train_test_split(input_columns, target, test_size=0.2, random_state = 42)","kernel":"ds_env","pos":10,"start":1657205102967,"state":"done","type":"cell"}
{"cell_type":"code","end":1657205103791,"exec_count":51,"id":"bd802a","input":"x_train.shape","kernel":"ds_env","output":{"0":{"data":{"text/plain":"(733, 20)"},"exec_count":51}},"pos":11,"start":1657205103785,"state":"done","type":"cell"}
{"cell_type":"code","end":1657205104685,"exec_count":52,"id":"6531ce","input":"print(y_train)\nprint(y_test)","kernel":"ds_env","output":{"0":{"name":"stdout","text":"795    0\n25     0\n84     1\n10     0\n344    1\n      ..\n106    0\n270    0\n861    1\n435    0\n102    1\nName: HeartDisease, Length: 733, dtype: category\nCategories (2, int64): [0, 1]\n669    0\n30     1\n377    1\n536    1\n807    0\n      ..\n211    1\n746    1\n585    1\n878    0\n452    1\nName: HeartDisease, Length: 184, dtype: category\nCategories (2, int64): [0, 1]\n"}},"pos":12,"start":1657205104667,"state":"done","type":"cell"}
{"cell_type":"code","end":1657205119409,"exec_count":56,"id":"6af8b6","input":"# fit your model\nmy_RFC.fit(x_train, y_train)","kernel":"ds_env","output":{"0":{"data":{"text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div>","text/plain":"RandomForestClassifier()"},"exec_count":56}},"pos":15,"start":1657205118999,"state":"done","type":"cell"}
{"cell_type":"code","end":1657205679373,"exec_count":60,"id":"2a443c","input":"from sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import GridSearchCV\nmy_RFC = RandomForestClassifier()","kernel":"ds_env","pos":13,"start":1657205679356,"state":"done","type":"cell"}
{"cell_type":"code","end":1657213309418,"exec_count":75,"id":"1a0db7","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":75},"1":{"data":{"image/png":"5bdfb09191a9c34c21bcccb2e213a7b88e8aec53","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":19,"start":1657213309185,"state":"done","type":"cell"}
{"cell_type":"code","end":1657213311919,"exec_count":76,"id":"ab1444","input":"from sklearn.metrics import accuracy_score, recall_score, f1_score","kernel":"ds_env","pos":20,"start":1657213311905,"state":"done","type":"cell"}
{"cell_type":"code","end":1657213313969,"exec_count":77,"id":"9cfcf4","input":"accuracy_score(y_test, y_hat)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0.8858695652173914"},"exec_count":77}},"pos":21,"start":1657213313965,"state":"done","type":"cell"}
{"cell_type":"code","end":1657213334537,"exec_count":78,"id":"cba014","input":"recall_score(y_test, y_hat)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0.9017857142857143"},"exec_count":78}},"pos":22,"start":1657213334518,"state":"done","type":"cell"}
{"cell_type":"code","end":1657213335022,"exec_count":79,"id":"080fb0","input":"f1_score(y_test, y_hat)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0.905829596412556"},"exec_count":79}},"pos":23,"start":1657213335007,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c3dfa1","input":"","pos":24,"type":"cell"}
{"cell_type":"code","exec_count":202,"id":"22c971","input":"# predictions\ny_hat = my_RFC.predict(x_test)\ny_hat","output":{"0":{"data":{"text/plain":"array([0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n       0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n       0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1,\n       1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1,\n       0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n       1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1,\n       1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0,\n       1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n       1, 1, 0, 1, 1, 1, 0, 1])"},"exec_count":202,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":203,"id":"70f4e8","input":"# evaluations\ntotal_squared_error = (np.sum((y_test - y_hat)**2))\nmean_squared_error = total_squared_error/len(y_test)\nprint(mean_squared_error)","output":{"0":{"name":"stdout","output_type":"stream","text":"0.13043478260869565\n"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":204,"id":"32231f","input":"np.array(y_test)","output":{"0":{"data":{"text/plain":"array([0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0,\n       0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n       0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1,\n       1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n       0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n       1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1,\n       1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0,\n       1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1,\n       1, 1, 0, 1, 1, 1, 0, 1])"},"exec_count":204,"output_type":"execute_result"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":74,"id":"4168fd","input":"y_hat = grid.predict(x_test)","kernel":"ds_env","pos":14,"state":"done","type":"cell"}
{"end":1657206978219,"exec_count":68,"id":"a1998d","input":"parameters = {'max_depth':[50, 80, 100],  'max_features': [2, 3, 4], 'min_samples_split': [1, 2, 3], 'n_estimators': [100, 200, 300], 'criterion': ['gini', 'entropy', 'log_loss']}\ngrid = GridSearchCV(my_RFC, parameters)\n\ngrid.fit(x_train, y_train)\ngrid.best_params_","kernel":"ds_env","output":{"0":{"name":"stderr","text":"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/model_selection/_validation.py:378: FitFailedWarning: \n405 fits failed out of a total of 1215.\nThe score on these train-test partitions for these parameters will be set to nan.\nIf these failures are not expected, you can try to debug them by setting error_score='raise'.\n\nBelow are more details about the failures:\n--------------------------------------------------------------------------------\n405 fits failed with the following error:\nTraceback (most recent call last):\n  File \"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/model_selection/_validation.py\", line 686, in _fit_and_score\n    estimator.fit(X_train, y_train, **fit_params)\n  File \"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_forest.py\", line 476, in fit\n    trees = Parallel(\n  File \"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/miniconda3/envs/ds_env/lib/python3.8/site-packages/joblib/parallel.py\", line 1043, in __call__\n    if self.dispatch_one_batch(iterator):\n  File \"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/miniconda3/envs/ds_env/lib/python3.8/site-packages/joblib/parallel.py\", line 861, in dispatch_one_batch\n    self._dispatch(tasks)\n  File \"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/miniconda3/envs/ds_env/lib/python3.8/site-packages/joblib/parallel.py\", line 779, in _dispatch\n    job = self._backend.apply_async(batch, callback=cb)\n  File \"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/miniconda3/envs/ds_env/lib/python3.8/site-packages/joblib/_parallel_backends.py\", line 208, in apply_async\n    result = ImmediateResult(func)\n  File \"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/miniconda3/envs/ds_env/lib/python3.8/site-packages/joblib/_parallel_backends.py\", line 572, in __init__\n    self.results = batch()\n  File \"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/miniconda3/envs/ds_env/lib/python3.8/site-packages/joblib/parallel.py\", line 262, in __call__\n    return [func(*args, **kwargs)\n  File \"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/miniconda3/envs/ds_env/lib/python3.8/site-packages/joblib/parallel.py\", line 262, in <listcomp>\n    return [func(*args, **kwargs)\n  File \"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/utils/fixes.py\", line 117, in __call__\n    return self.function(*args, **kwargs)\n  File \"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/ensemble/_forest.py\", line 189, in _parallel_build_trees\n    tree.fit(X, y, sample_weight=curr_sample_weight, check_input=False)\n  File \"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/tree/_classes.py\", line 969, in fit\n    super().fit(\n  File \"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/tree/_classes.py\", line 265, in fit\n    check_scalar(\n  File \"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/utils/validation.py\", line 1480, in check_scalar\n    raise ValueError(\nValueError: min_samples_split == 1, must be >= 2.\n\n  warnings.warn(some_fits_failed_message, FitFailedWarning)\n/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/miniconda3/envs/ds_env/lib/python3.8/site-packages/sklearn/model_selection/_search.py:953: UserWarning: One or more of the test scores are non-finite: [       nan        nan        nan 0.86895909 0.86487746 0.86486814\n 0.86894045 0.86895909 0.86897773        nan        nan        nan\n 0.86485882 0.86079583 0.87033827 0.85804678 0.85665828 0.86761718\n        nan        nan        nan 0.85943528 0.85532569 0.85807474\n 0.85808406 0.8580561  0.85943528        nan        nan        nan\n 0.85941664 0.87034759 0.86758923 0.86350759 0.86621005 0.86895909\n        nan        nan        nan 0.86485882 0.85530705 0.86624732\n 0.86074923 0.866238   0.86350759        nan        nan        nan\n 0.85394651 0.86759855 0.85941664 0.8580561  0.86079583 0.85806542\n        nan        nan        nan 0.85528842 0.86352623 0.86894977\n 0.86349828 0.87306868 0.86894977        nan        nan        nan\n 0.86621936 0.85808406 0.86351691 0.86352623 0.87033827 0.86487746\n        nan        nan        nan 0.86214705 0.86215637 0.85671419\n 0.85806542 0.86212841 0.86626596        nan        nan        nan\n 0.87168018 0.86347032 0.86759855 0.866238   0.8716895  0.86210978\n        nan        nan        nan 0.86214705 0.86216569 0.86350759\n 0.86895909 0.86214705 0.86351691        nan        nan        nan\n 0.85671419 0.85803746 0.86760787 0.86897773 0.8648961  0.86081446\n        nan        nan        nan 0.86349828 0.86352623 0.86621936\n 0.86350759 0.86761718 0.86759855        nan        nan        nan\n 0.85395583 0.86487746 0.85668624 0.85668624 0.86757991 0.86626596\n        nan        nan        nan 0.86896841 0.86624732 0.86078651\n 0.86214705 0.8648961  0.86626596        nan        nan        nan\n 0.86351691 0.86075855 0.86485882 0.86076787 0.85803746 0.86624732\n        nan        nan        nan 0.86076787 0.86625664 0.86351691\n 0.87171745 0.86350759 0.86761718        nan        nan        nan\n 0.85671419 0.86352623 0.86077719 0.86761718 0.86347032 0.85807474\n        nan        nan        nan 0.86349828 0.86760787 0.87031963\n 0.87031963 0.86896841 0.87305936        nan        nan        nan\n 0.86761718 0.8648961  0.85941664 0.87031963 0.86761718 0.8676265\n        nan        nan        nan 0.85943528 0.866238   0.86625664\n 0.85808406 0.86900568 0.86077719        nan        nan        nan\n 0.87034759 0.86210978 0.86076787 0.86896841 0.86621005 0.86760787\n        nan        nan        nan 0.86080514 0.86487746 0.86215637\n 0.86622868 0.8648961  0.86491473        nan        nan        nan\n 0.85671419 0.86079583 0.85396515 0.85533501 0.8566676  0.86488678\n        nan        nan        nan 0.86075855 0.86621936 0.87168018\n 0.86621005 0.87170814 0.86895909        nan        nan        nan\n 0.8676265  0.86898705 0.86353555 0.85125338 0.86077719 0.86487746\n        nan        nan        nan 0.85530705 0.86352623 0.85669555\n 0.85942596 0.86215637 0.85535365]\n  warnings.warn(\n"},"1":{"data":{"text/plain":"{'criterion': 'gini',\n 'max_depth': 100,\n 'max_features': 2,\n 'min_samples_split': 3,\n 'n_estimators': 200}"},"exec_count":68}},"pos":13.5,"start":1657206564518,"state":"done","type":"cell"}
{"end":1657207031824,"exec_count":70,"id":"88f1bd","input":"# new random forest\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","kernel":"ds_env","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":70},"1":{"data":{"image/png":"5bdfb09191a9c34c21bcccb2e213a7b88e8aec53","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":14.5,"start":1657207031616,"state":"done","type":"cell"}
{"end":1657207037584,"exec_count":71,"id":"a4caac","input":"from sklearn.metrics import accuracy_score, recall_score, f1_score\naccuracy_score(y_test, y_hat)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0.8858695652173914"},"exec_count":71}},"pos":14.75,"start":1657207037571,"state":"done","type":"cell"}
{"end":1657207040348,"exec_count":72,"id":"b49ce4","input":"recall_score(y_test, y_hat)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0.9017857142857143"},"exec_count":72}},"pos":14.875,"start":1657207040342,"state":"done","type":"cell"}
{"end":1657207041638,"exec_count":73,"id":"bb2846","input":"f1_score(y_test, y_hat)","kernel":"ds_env","output":{"0":{"data":{"text/plain":"0.905829596412556"},"exec_count":73}},"pos":14.9375,"start":1657207041625,"state":"done","type":"cell"}
{"id":0,"time":1657205213343,"type":"user"}
{"last_load":1657202005008,"type":"file"}