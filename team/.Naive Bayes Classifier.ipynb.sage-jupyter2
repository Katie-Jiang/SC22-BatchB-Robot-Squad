{"backend_state":"init","connection_file":"/projects/f8b69746-629d-4592-8f76-5d11b6fd6282/.local/share/jupyter/runtime/kernel-0861b91c-43ca-49db-84c7-527a0d40effd.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"182694","input":"","pos":28,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"379244","input":"","pos":15,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d70353","input":"","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":100,"id":"d07f4f","input":"heart_1 = pd.get_dummies(heart, columns = ['RestingECG','Sex','ChestPainType', 'ST_Slope', 'ExerciseAngina'])\nheart_1","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>RestingBP</th>\n      <th>Cholesterol</th>\n      <th>FastingBS</th>\n      <th>MaxHR</th>\n      <th>Oldpeak</th>\n      <th>HeartDisease</th>\n      <th>RestingECG_LVH</th>\n      <th>RestingECG_Normal</th>\n      <th>RestingECG_ST</th>\n      <th>...</th>\n      <th>Sex_M</th>\n      <th>ChestPainType_ASY</th>\n      <th>ChestPainType_ATA</th>\n      <th>ChestPainType_NAP</th>\n      <th>ChestPainType_TA</th>\n      <th>ST_Slope_Down</th>\n      <th>ST_Slope_Flat</th>\n      <th>ST_Slope_Up</th>\n      <th>ExerciseAngina_N</th>\n      <th>ExerciseAngina_Y</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>40</td>\n      <td>140</td>\n      <td>289</td>\n      <td>0</td>\n      <td>172</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>49</td>\n      <td>160</td>\n      <td>180</td>\n      <td>0</td>\n      <td>156</td>\n      <td>1.0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>37</td>\n      <td>130</td>\n      <td>283</td>\n      <td>0</td>\n      <td>98</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>48</td>\n      <td>138</td>\n      <td>214</td>\n      <td>0</td>\n      <td>108</td>\n      <td>1.5</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>54</td>\n      <td>150</td>\n      <td>195</td>\n      <td>0</td>\n      <td>122</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>913</th>\n      <td>45</td>\n      <td>110</td>\n      <td>264</td>\n      <td>0</td>\n      <td>132</td>\n      <td>1.2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>914</th>\n      <td>68</td>\n      <td>144</td>\n      <td>193</td>\n      <td>1</td>\n      <td>141</td>\n      <td>3.4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>915</th>\n      <td>57</td>\n      <td>130</td>\n      <td>131</td>\n      <td>0</td>\n      <td>115</td>\n      <td>1.2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>916</th>\n      <td>57</td>\n      <td>130</td>\n      <td>236</td>\n      <td>0</td>\n      <td>174</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>917</th>\n      <td>38</td>\n      <td>138</td>\n      <td>175</td>\n      <td>0</td>\n      <td>173</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>917 rows Ã— 21 columns</p>\n</div>","text/plain":"     Age  RestingBP  Cholesterol  FastingBS  MaxHR  Oldpeak  HeartDisease  \\\n0     40        140          289          0    172      0.0             0   \n1     49        160          180          0    156      1.0             1   \n2     37        130          283          0     98      0.0             0   \n3     48        138          214          0    108      1.5             1   \n4     54        150          195          0    122      0.0             0   \n..   ...        ...          ...        ...    ...      ...           ...   \n913   45        110          264          0    132      1.2             1   \n914   68        144          193          1    141      3.4             1   \n915   57        130          131          0    115      1.2             1   \n916   57        130          236          0    174      0.0             1   \n917   38        138          175          0    173      0.0             0   \n\n     RestingECG_LVH  RestingECG_Normal  RestingECG_ST  ...  Sex_M  \\\n0                 0                  1              0  ...      1   \n1                 0                  1              0  ...      0   \n2                 0                  0              1  ...      1   \n3                 0                  1              0  ...      0   \n4                 0                  1              0  ...      1   \n..              ...                ...            ...  ...    ...   \n913               0                  1              0  ...      1   \n914               0                  1              0  ...      1   \n915               0                  1              0  ...      1   \n916               1                  0              0  ...      0   \n917               0                  1              0  ...      1   \n\n     ChestPainType_ASY  ChestPainType_ATA  ChestPainType_NAP  \\\n0                    0                  1                  0   \n1                    0                  0                  1   \n2                    0                  1                  0   \n3                    1                  0                  0   \n4                    0                  0                  1   \n..                 ...                ...                ...   \n913                  0                  0                  0   \n914                  1                  0                  0   \n915                  1                  0                  0   \n916                  0                  1                  0   \n917                  0                  0                  1   \n\n     ChestPainType_TA  ST_Slope_Down  ST_Slope_Flat  ST_Slope_Up  \\\n0                   0              0              0            1   \n1                   0              0              1            0   \n2                   0              0              0            1   \n3                   0              0              1            0   \n4                   0              0              0            1   \n..                ...            ...            ...          ...   \n913                 1              0              1            0   \n914                 0              0              1            0   \n915                 0              0              1            0   \n916                 0              0              1            0   \n917                 0              0              0            1   \n\n     ExerciseAngina_N  ExerciseAngina_Y  \n0                   1                 0  \n1                   1                 0  \n2                   1                 0  \n3                   0                 1  \n4                   1                 0  \n..                ...               ...  \n913                 1                 0  \n914                 1                 0  \n915                 0                 1  \n916                 1                 0  \n917                 1                 0  \n\n[917 rows x 21 columns]"},"exec_count":100,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":101,"id":"8a8979","input":"import sklearn\nfrom sklearn.model_selection import train_test_split\n\ntarget = heart_1[\"HeartDisease\"]\ninput_columns = heart_1.loc[:, heart_1.columns != \"HeartDisease\"]\nx_train, x_test, y_train, y_test = train_test_split(input_columns, target, test_size=0.2, random_state=42)","pos":6,"type":"cell"}
{"cell_type":"code","exec_count":102,"id":"edfd5b","input":"from sklearn.naive_bayes import GaussianNB","pos":7,"type":"cell"}
{"cell_type":"code","exec_count":103,"id":"4ebe0d","input":"my_naive_model = GaussianNB()","pos":8,"type":"cell"}
{"cell_type":"code","exec_count":104,"id":"52f8ef","input":"my_naive_model.fit(x_train, y_train)","output":{"0":{"data":{"text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GaussianNB</label><div class=\"sk-toggleable__content\"><pre>GaussianNB()</pre></div></div></div></div></div>","text/plain":"GaussianNB()"},"exec_count":104,"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":105,"id":"a85701","input":"y_hat = my_naive_model.predict(x_test)\ny_hat","output":{"0":{"data":{"text/plain":"array([0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n       0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n       1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1,\n       1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0,\n       0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1,\n       1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1,\n       1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0,\n       1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n       1, 1, 0, 0, 1, 0, 0, 1])"},"exec_count":105,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":106,"id":"3dbdc1","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":106,"output_type":"execute_result"},"1":{"data":{"image/png":"545536e4aadc1f06fa91d87be1227c61c83ae980","text/plain":"<Figure size 432x288 with 2 Axes>"},"exec_count":106,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":107,"id":"c0f21b","input":"accuracy_score(y_test, y_hat)","output":{"0":{"data":{"text/plain":"0.842391304347826"},"exec_count":107,"output_type":"execute_result"}},"pos":14,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"c92dc5","input":"total_squared_error = (np.sum((y_test - y_hat)**2)) #get the sum of all the errors (error = what we want (y_test) - what we predicted (y_hat))\nmean_squared_error = total_squared_error/len(y_test) #divide this by how many rows/observations we have \nprint(mean_squared_error)","output":{"0":{"name":"stdout","output_type":"stream","text":"0.15760869565217392\n"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"057c69","input":"from sklearn.metrics import accuracy_score","pos":13,"type":"cell"}
{"cell_type":"code","exec_count":59,"id":"6fcd0e","input":"np.logspace(0,-9, num=50)","output":{"0":{"data":{"text/plain":"array([1.00000000e+00, 6.55128557e-01, 4.29193426e-01, 2.81176870e-01,\n       1.84206997e-01, 1.20679264e-01, 7.90604321e-02, 5.17947468e-02,\n       3.39322177e-02, 2.22299648e-02, 1.45634848e-02, 9.54095476e-03,\n       6.25055193e-03, 4.09491506e-03, 2.68269580e-03, 1.75751062e-03,\n       1.15139540e-03, 7.54312006e-04, 4.94171336e-04, 3.23745754e-04,\n       2.12095089e-04, 1.38949549e-04, 9.10298178e-05, 5.96362332e-05,\n       3.90693994e-05, 2.55954792e-05, 1.67683294e-05, 1.09854114e-05,\n       7.19685673e-06, 4.71486636e-06, 3.08884360e-06, 2.02358965e-06,\n       1.32571137e-06, 8.68511374e-07, 5.68986603e-07, 3.72759372e-07,\n       2.44205309e-07, 1.59985872e-07, 1.04811313e-07, 6.86648845e-08,\n       4.49843267e-08, 2.94705170e-08, 1.93069773e-08, 1.26485522e-08,\n       8.28642773e-09, 5.42867544e-09, 3.55648031e-09, 2.32995181e-09,\n       1.52641797e-09, 1.00000000e-09])"},"exec_count":59,"output_type":"execute_result"}},"pos":16,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":60,"id":"8e0ea2","input":"from sklearn.model_selection import GridSearchCV\n\nparameters = {'var_smoothing': np.logspace(0,-9, num=50)}\ngrid = GridSearchCV(my_naive_model, parameters) # model\n\ngrid.fit(x_train, y_train)\ngrid.best_params_","output":{"0":{"data":{"text/plain":"{'var_smoothing': 2.0235896477251557e-06}"},"exec_count":60,"output_type":"execute_result"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":61,"id":"001669","input":"y_hat = grid.predict(x_test)","pos":18,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":62,"id":"00003d","input":"accuracy_score(y_hat, y_test)","output":{"0":{"data":{"text/plain":"0.8586956521739131"},"exec_count":62,"output_type":"execute_result"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":63,"id":"91a426","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":63,"output_type":"execute_result"},"1":{"data":{"image/png":"ce9799840e20ac45e520e121f69615e8d0e4827b","text/plain":"<Figure size 432x288 with 2 Axes>"},"exec_count":63,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":73,"id":"74576d","input":"from sklearn.preprocessing import StandardScaler","pos":21,"type":"cell"}
{"cell_type":"code","exec_count":90,"id":"115fea","input":"my_standard_scaler = StandardScaler()\n#my_standard_scaler.fit_transform(heart_1)","pos":22,"type":"cell"}
{"cell_type":"code","exec_count":91,"id":"ad03e1","input":"x_train_scaled = my_standard_scaler.fit_transform(x_train)\nx_test_scaled = my_standard_scaler.transform(x_test)","pos":23,"type":"cell"}
{"cell_type":"code","exec_count":92,"id":"383779","input":"parameters = {'var_smoothing': np.logspace(0,-9, num=50)}\ngrid = GridSearchCV(my_naive_model, parameters) # model\n\ngrid.fit(x_train_scaled, y_train)\ngrid.best_params_","output":{"0":{"data":{"text/plain":"{'var_smoothing': 0.0517947467923121}"},"exec_count":92,"output_type":"execute_result"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":93,"id":"030e94","input":"y_hat = grid.predict(x_test_scaled)","pos":25,"type":"cell"}
{"cell_type":"code","exec_count":94,"id":"adea31","input":"accuracy_score(y_hat, y_test)","output":{"0":{"data":{"text/plain":"0.842391304347826"},"exec_count":94,"output_type":"execute_result"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":95,"id":"45cac2","input":"from sklearn.metrics import confusion_matrix\nimport seaborn as sns\nsns.heatmap(confusion_matrix(y_test, y_hat), annot=True, fmt='g')","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":95,"output_type":"execute_result"},"1":{"data":{"image/png":"545536e4aadc1f06fa91d87be1227c61c83ae980","text/plain":"<Figure size 432x288 with 2 Axes>"},"exec_count":95,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":27,"type":"cell"}
{"cell_type":"code","exec_count":96,"id":"434d8e","input":"import sklearn\nimport plotly.express as px\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt \nimport seaborn as sns","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":97,"id":"70f04c","input":"heart = pd.read_csv(\"Data/heart.csv\")","pos":2,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":98,"id":"de0ba6","input":"row_to_drop = [449]\nheart.drop(row_to_drop, axis= 0, inplace= True)","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":99,"id":"03be53","input":"heart.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex</th>\n      <th>ChestPainType</th>\n      <th>RestingBP</th>\n      <th>Cholesterol</th>\n      <th>FastingBS</th>\n      <th>RestingECG</th>\n      <th>MaxHR</th>\n      <th>ExerciseAngina</th>\n      <th>Oldpeak</th>\n      <th>ST_Slope</th>\n      <th>HeartDisease</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>40</td>\n      <td>M</td>\n      <td>ATA</td>\n      <td>140</td>\n      <td>289</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>172</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Up</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>49</td>\n      <td>F</td>\n      <td>NAP</td>\n      <td>160</td>\n      <td>180</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>156</td>\n      <td>N</td>\n      <td>1.0</td>\n      <td>Flat</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>37</td>\n      <td>M</td>\n      <td>ATA</td>\n      <td>130</td>\n      <td>283</td>\n      <td>0</td>\n      <td>ST</td>\n      <td>98</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Up</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>48</td>\n      <td>F</td>\n      <td>ASY</td>\n      <td>138</td>\n      <td>214</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>108</td>\n      <td>Y</td>\n      <td>1.5</td>\n      <td>Flat</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>54</td>\n      <td>M</td>\n      <td>NAP</td>\n      <td>150</td>\n      <td>195</td>\n      <td>0</td>\n      <td>Normal</td>\n      <td>122</td>\n      <td>N</td>\n      <td>0.0</td>\n      <td>Up</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Age Sex ChestPainType  RestingBP  Cholesterol  FastingBS RestingECG  MaxHR  \\\n0   40   M           ATA        140          289          0     Normal    172   \n1   49   F           NAP        160          180          0     Normal    156   \n2   37   M           ATA        130          283          0         ST     98   \n3   48   F           ASY        138          214          0     Normal    108   \n4   54   M           NAP        150          195          0     Normal    122   \n\n  ExerciseAngina  Oldpeak ST_Slope  HeartDisease  \n0              N      0.0       Up             0  \n1              N      1.0     Flat             1  \n2              N      0.0       Up             0  \n3              Y      1.5     Flat             1  \n4              N      0.0       Up             0  "},"exec_count":99,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"id":0,"time":1657206701974,"type":"user"}
{"last_load":1657286818975,"type":"file"}